Alex’s Comments:

helioser.sh
It is efficient that you used a for loop within a for loop and executed multiple commands within the inner for loop.

Six_AA.ipynb
This code is good because it extracts the specific protein names for the top 6 hits, which is more specific than the entire line of data for the top 6 hits.

Experiment Folder
For your csv files, one suggestion would be to make sure they are comma delimited. This will help with graphing/inputing the data into python. If you open in excel, it does not show up in separate columns. We used ’s/ /,/g’ to add commas instead of spaces to fix our files.

Expression Levels Graph:
Based on the journal article, instead of having control/obese bars on the x axis, I think you may need the protein sequences incorporated. Also, it would be helpful to label the y axis.

Michaels Comments:

helioser

Their shell script containing the for loop to make the table seems good. 



Expression Level Graph

Their expression level graph needs the six proteins that were found on the NCBI website. Maybe look at the graph's included in the Kuhns paper and model how you will format yours off of theirs. 


Jessica's Comments

1. Making a table including the top hit for each transcript - six_AA: the group did a
good job creating this code since it produces a table including only the name of the
nucleotides, instead of the entire lines

2. "Use bash script to loop over the 6 transcript files and 4 "RNAseq files," executing
these commands" - your helioser.sh file does not include the code you used for the first
two parts of this step - using muscle and hmmbuild.



